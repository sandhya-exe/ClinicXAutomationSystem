@model ClinicXAutomationSystem.Models.Appointment

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Appointment</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.AppointmentID)

    <div class="form-group">
        @Html.LabelFor(model => model.patientID, "Patient Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PatientID", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })

            @Html.ValidationMessageFor(model => model.patientID, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.physicianID, "Physician Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PhysicianID", null, htmlAttributes: new { @class = "form-control" })

            @Html.ValidationMessageFor(model => model.physicianID, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">

            @Html.LabelFor(model => model.AppointmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                <asp:Calendar runat="server"></asp:Calendar>
                @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
            </div>
        </div>*@



    @*<div class="form-group">
            @Html.LabelFor(model => model.AppointmentDate, "Appointment Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                 Display AppointmentDate as Read-Only in 'dd-MM-yyyy' format
                <input type="text" class="form-control" value="@Model.AppointmentDate" readonly />
                @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.AppointmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">


                @Html.EditorFor(model => model.AppointmentDate, "0:yyyy-MM-dd", new { htmlAttributes = new { @class = "form-control", type = "datetime-local"  } })
                @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.AppointmentDate, "Appointment Date", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <!-- Display AppointmentDate as Read-Only in 'dd-MM-yyyy' format -->
            <input type="text" class="form-control" value="@Model.AppointmentDate" readonly />

            <!-- Hidden input field to submit AppointmentDate value -->
            @Html.HiddenFor(model => model.AppointmentDate)

            @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Criticality, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Criticality, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Criticality, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="form-check">
                @Html.RadioButtonFor(model => model.Status, "Pending", new { @class = "form-check-input", id = "pendingStatus" })
                @Html.LabelFor(model => model.Status, "Pending", new { @for = "pendingStatus", @class = "form-check-label" })
            </div>
            <div class="form-check">
                @Html.RadioButtonFor(model => model.Status, "Confirmed", new { @class = "form-check-input", id = "confirmedStatus" })
                @Html.LabelFor(model => model.Status, "Confirmed", new { @for = "confirmedStatus", @class = "form-check-label" })
            </div>
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.ScheduleDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ScheduleDateTime, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.ScheduleDateTime, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.ScheduleDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ScheduleDateTime, new
            {
                htmlAttributes = new
                {
                    @class = "form-control",
                    type = "datetime-local",
                    @min = DateTime.Now.ToString("yyyy-MM-ddTHH:mm")
                }
            })
            @Html.ValidationMessageFor(model => model.ScheduleDateTime, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>

</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
